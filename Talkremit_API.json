{
	"info": {
		"_postman_id": "6bae8af6-7223-4826-baa5-bc9d23451fc4",
		"name": "Talkremit Wallet",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38815798"
	},
	"item": [
		{
			"name": "User Wallet",
			"item": [
				{
					"name": "Wallet Creation",
					"item": [
						{
							"name": "Create Wallet Using Empty User Identity",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code is not S100000\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.responseCode).not.eql(\"S100000\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"userIdentity\": \"\",\r\n  \"countryCode\": \"UK\",\r\n  \"currency\": \"{{ValidCurrency}}\",\r\n  \"email\": \"fariha.test.214@example.com\",\r\n  \"mobileNumber\": \"+8801234007214\",\r\n  \"firstName\": \"Fariha\",\r\n  \"middleName\": \"Test\",\r\n  \"lastName\": \"Fourteen\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/api/v1/wallet/create",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"v1",
										"wallet",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Wallet Using Invalid Identity",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code is not S100000\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.responseCode).not.eql(\"S100000\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"userIdentity\": \"{{InvalidUserIdentity}}\",\r\n  \"countryCode\": \"US\",\r\n  \"currency\": \"{{ValidCurrency}}\",\r\n  \"email\": \"fariha.test.214@example.com\",\r\n  \"mobileNumber\": \"+8801234007214\",\r\n  \"firstName\": \"Fariha\",\r\n  \"middleName\": \"Test\",\r\n  \"lastName\": \"Fourteen\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/api/v1/wallet/create",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"v1",
										"wallet",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Wallet Using Empty Country Code",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is not 200\", function () {",
											"    pm.expect(pm.response.code).not.eql(200);",
											"});",
											"",
											"pm.test(\"Response code is ECS400\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.responseCode).to.eql(\"ECS400\");",
											"});",
											"",
											"pm.test(\"Response message is Invalid request data\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.responseMessage).to.eql(\"Invalid request data\");",
											"});",
											"",
											"pm.test(\"Country code validation message is present\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data.countryCode).to.eql(\"Country Code is required\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"userIdentity\": \"{{ValidUserIdentity}}\",\r\n  \"countryCode\": \"\",\r\n  \"currency\": \"{{ValidCurrency}}\",\r\n  \"email\": \"fariha.test.214@example.com\",\r\n  \"mobileNumber\": \"+8801234007214\",\r\n  \"firstName\": \"Fariha\",\r\n  \"middleName\": \"Test\",\r\n  \"lastName\": \"Fourteen\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/api/v1/wallet/create",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"v1",
										"wallet",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Wallet Using Invalid Country Code",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Postman test script for validating updated error response",
											"",
											"pm.test(\"Status code is not 200\", function () {",
											"    pm.expect(pm.response.code).not.eql(200);",
											"});",
											"",
											"pm.test(\"Response code is ECS400\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.responseCode).to.eql(\"ECS400\");",
											"});",
											"",
											"pm.test(\"Response message is Invalid request data\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.responseMessage).to.eql(\"Invalid request data\");",
											"});",
											"",
											"pm.test(\"Country code validation message specifies exactly 2 characters\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data.countryCode).to.eql(\"Country code must be exactly 2 characters\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"userIdentity\": \"{{ValidUserIdentity}}\",\r\n  \"countryCode\": \"@#3\",\r\n  \"currency\": \"{{ValidCurrency}}\",\r\n  \"email\": \"fariha.test.214@example.com\",\r\n  \"mobileNumber\": \"+8801234007214\",\r\n  \"firstName\": \"Fariha\",\r\n  \"middleName\": \"Test\",\r\n  \"lastName\": \"Fourteen\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/api/v1/wallet/create",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"v1",
										"wallet",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Wallet Using Empty Currency",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is not 200\", function () {",
											"    pm.expect(pm.response.code).not.eql(200);",
											"});",
											"",
											"pm.test(\"Response code is ECS400\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.responseCode).to.eql(\"ECS400\");",
											"});",
											"",
											"pm.test(\"Response message is Invalid request data\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.responseMessage).to.eql(\"Invalid request data\");",
											"});",
											"",
											"pm.test(\"Currency validation message specifies exactly 3 characters\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data.currency).to.eql(\"Currency is required\");",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"userIdentity\": \"{{ValidUserIdentity}}\",\r\n  \"countryCode\": \"US\",\r\n  \"currency\": \"\",\r\n  \"email\": \"fariha.test.214@example.com\",\r\n  \"mobileNumber\": \"+8801234007214\",\r\n  \"firstName\": \"Fariha\",\r\n  \"middleName\": \"Test\",\r\n  \"lastName\": \"Fourteen\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/api/v1/wallet/create",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"v1",
										"wallet",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Wallet Using Invalid Currency",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code is not S100000\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.responseCode).not.eql(\"S100000\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"userIdentity\": \"{{ValidUserIdentity}}\",\r\n  \"countryCode\": \"US\",\r\n  \"currency\": \"{{InvalidCurrency}}\",\r\n  \"email\": \"fariha.test.214@example.com\",\r\n  \"mobileNumber\": \"+8801234007214\",\r\n  \"firstName\": \"Fariha\",\r\n  \"middleName\": \"Test\",\r\n  \"lastName\": \"Fourteen\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/api/v1/wallet/create",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"v1",
										"wallet",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Wallet Using Empty Email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is not 200\", function () {",
											"    pm.expect(pm.response.code).not.eql(200);",
											"});",
											"",
											"pm.test(\"Response code is ECS400\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.responseCode).to.eql(\"ECS400\");",
											"});",
											"",
											"pm.test(\"Response message is Invalid request data\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.responseMessage).to.eql(\"Invalid request data\");",
											"});",
											"",
											"pm.test(\"Email validation message is present\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data.email).to.eql(\"Email is required\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"userIdentity\": \"{{ValidUserIdentity}}\",\r\n  \"countryCode\": \"US\",\r\n  \"currency\": \"{{ValidCurrency}}\",\r\n  \"email\": \"\",\r\n  \"mobileNumber\": \"+8801234007214\",\r\n  \"firstName\": \"Fariha\",\r\n  \"middleName\": \"Test\",\r\n  \"lastName\": \"Fourteen\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/api/v1/wallet/create",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"v1",
										"wallet",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Wallet Using Invalid Email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is not 200\", function () {",
											"    pm.expect(pm.response.code).not.eql(200);",
											"});",
											"",
											"pm.test(\"Response code is ECS400\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.responseCode).to.eql(\"ECS400\");",
											"});",
											"",
											"pm.test(\"Response message is Invalid request data\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.responseMessage).to.eql(\"Invalid request data\");",
											"});",
											"",
											"pm.test(\"Email validation message indicates invalid format\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data.email).to.eql(\"Email should be valid\");",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"userIdentity\": \"{{ValidUserIdentity}}\",\r\n  \"countryCode\": \"US\",\r\n  \"currency\": \"{{ValidCurrency}}\",\r\n  \"email\": \"fariha.test.214\",\r\n  \"mobileNumber\": \"+8801234007214\",\r\n  \"firstName\": \"Fariha\",\r\n  \"middleName\": \"Test\",\r\n  \"lastName\": \"Fourteen\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/api/v1/wallet/create",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"v1",
										"wallet",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Wallet Using Empty Mobile",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is not 200\", function () {",
											"    pm.expect(pm.response.code).not.eql(200);",
											"});",
											"",
											"pm.test(\"Response code is ECS400\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.responseCode).to.eql(\"ECS400\");",
											"});",
											"",
											"pm.test(\"Response message is Invalid request data\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.responseMessage).to.eql(\"Invalid request data\");",
											"});",
											"",
											"pm.test(\"Mobile number is required\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data.mobileNumber).to.eql(\"Mobile Number is required\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"userIdentity\": \"{{ValidUserIdentity}}\",\r\n  \"countryCode\": \"US\",\r\n  \"currency\": \"{{ValidCurrency}}\",\r\n  \"email\": \"fariha.test.214@example.com\",\r\n  \"mobileNumber\": \"\",\r\n  \"firstName\": \"Fariha\",\r\n  \"middleName\": \"Test\",\r\n  \"lastName\": \"Fourteen\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/api/v1/wallet/create",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"v1",
										"wallet",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Wallet Using Invalid Mobile",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is not 200\", function () {",
											"    pm.expect(pm.response.code).not.eql(200);",
											"});",
											"",
											"pm.test(\"Response code is ECS400\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.responseCode).to.eql(\"ECS400\");",
											"});",
											"",
											"pm.test(\"Response message is Invalid request data\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.responseMessage).to.eql(\"Invalid request data\");",
											"});",
											"",
											"pm.test(\"Mobile number validation message indicates E.164 format\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data.mobileNumber).to.eql(\"Mobile number must be in valid E.164 format\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"userIdentity\": \"{{ValidUserIdentity}}\",\r\n  \"countryCode\": \"US\",\r\n  \"currency\": \"{{ValidCurrency}}\",\r\n  \"email\": \"fariha.test.214@example.com\",\r\n  \"mobileNumber\": \"fewf@#\",\r\n  \"firstName\": \"Fariha\",\r\n  \"middleName\": \"Test\",\r\n  \"lastName\": \"Fourteen\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/api/v1/wallet/create",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"v1",
										"wallet",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Wallet Using Invalid Mobile Not Matched With Country",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is not 200\", function () {",
											"    pm.expect(pm.response.code).not.eql(200);",
											"});",
											"",
											"pm.test(\"Response code is ECS400\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.responseCode).to.eql(\"ECS400\");",
											"});",
											"",
											"pm.test(\"Response message is Invalid request data\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.responseMessage).to.eql(\"Invalid request data\");",
											"});",
											"",
											"pm.test(\"Mobile number validation message indicates E.164 format\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data.mobileNumber).to.eql(\"Mobile number must be in valid E.164 format\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"userIdentity\": \"{{ValidUserIdentity}}\",\r\n  \"countryCode\": \"US\",\r\n  \"currency\": \"{{ValidCurrency}}\",\r\n  \"email\": \"fariha.test.214@example.com\",\r\n  \"mobileNumber\": \"01858541331\",\r\n  \"firstName\": \"Fariha\",\r\n  \"middleName\": \"Test\",\r\n  \"lastName\": \"Fourteen\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/api/v1/wallet/create",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"v1",
										"wallet",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Wallet Using Empty Name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is not 200\", function () {",
											"    pm.expect(pm.response.code).not.eql(200);",
											"});",
											"",
											"pm.test(\"Response code is ECS400\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.responseCode).to.eql(\"ECS400\");",
											"});",
											"",
											"pm.test(\"Response message is Invalid request data\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.responseMessage).to.eql(\"Invalid request data\");",
											"});",
											"",
											"pm.test(\"First name validation message is present\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data.firstName).to.eql(\"First name is required\");",
											"});",
											"",
											"pm.test(\"Last name validation message is present\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data.lastName).to.eql(\"Last name is required\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"userIdentity\": \"{{ValidUserIdentity}}\",\r\n  \"countryCode\": \"UK\",\r\n  \"currency\": \"{{ValidCurrency}}\",\r\n  \"email\": \"fariha.test.214@example.com\",\r\n  \"mobileNumber\": \"+8801234007214\",\r\n  \"firstName\": \"\",\r\n  \"middleName\": \"\",\r\n  \"lastName\": \"\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/api/v1/wallet/create",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"v1",
										"wallet",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Wallet Using Invalid Name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is not 200\", function () {",
											"    pm.expect(pm.response.code).not.eql(200);",
											"});",
											"",
											"pm.test(\"Response code is ECS400\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.responseCode).to.eql(\"ECS400\");",
											"});",
											"",
											"pm.test(\"Response message is Invalid request data\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.responseMessage).to.eql(\"Invalid request data\");",
											"});",
											"",
											"pm.test(\"Last name validation message is present\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data.lastName).to.eql(\"Last name is required\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"userIdentity\": \"{{ValidUserIdentity}}\",\r\n  \"countryCode\": \"UK\",\r\n  \"currency\": \"{{ValidCurrency}}\",\r\n  \"email\": \"fariha.test.214@example.com\",\r\n  \"mobileNumber\": \"+8801234007214\",\r\n  \"firstName\": \"bcwbhj&^%\",\r\n  \"middleName\": \"\",\r\n  \"lastName\": \"\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/api/v1/wallet/create",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"v1",
										"wallet",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Wallet Using Valid Information",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response code is S100000\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.responseCode).to.eql(\"S100000\");",
											"});",
											"",
											"pm.test(\"Response message is Operation successful\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.responseMessage).to.eql(\"Operation successful\");",
											"});",
											"",
											"pm.test(\"Data field is null\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data).to.eql(null);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Generate a unique user identity using timestamp",
											"let uniqueUserIdentity = \"UserIdentity_\" + Date.now();",
											"",
											"// Store it as a collection/environment variable",
											"pm.variables.set(\"UniqueUserIdentity\", uniqueUserIdentity);",
											"",
											"// (Optional) Log for debugging",
											"console.log(\"Generated userIdentity:\", uniqueUserIdentity);",
											"",
											"// Generate a random 7-digit number to append",
											"let randomDigits = Math.floor(1000000 + Math.random() * 9000000); ",
											"",
											"// Use your desired country code and prefix",
											"let uniqueMobileNumber = \"+8801\" + randomDigits; ",
											"",
											"// Store it as a variable for use in the request body",
											"pm.variables.set(\"UniqueMobileNumber\", uniqueMobileNumber);",
											"",
											"// Log for debugging (optional)",
											"console.log(\"Generated mobile number:\", uniqueMobileNumber);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"userIdentity\": \"{{UniqueUserIdentity}}\",\r\n  \"countryCode\": \"CA\",\r\n  \"currency\": \"{{ValidCurrency}}\",\r\n  \"email\": \"eftiar@brainstation-23.com\",\r\n  \"mobileNumber\": \"{{UniqueMobileNumber}}\",\r\n  \"firstName\": \"Eftiar\",\r\n  \"middleName\": \"\",\r\n  \"lastName\": \"Hossain\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/api/v1/wallet/create",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"v1",
										"wallet",
										"create"
									]
								}
							},
							"response": [
								{
									"name": "Create wallet",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"userIdentity\": \"UserIdentity214\",\r\n  \"countryCode\": \"US\",\r\n  \"currency\": \"USD\",\r\n  \"email\": \"fariha.test.214@example.com\",\r\n  \"mobileNumber\": \"+8801234007214\",\r\n  \"firstName\": \"Fariha\",\r\n  \"middleName\": \"Test\",\r\n  \"lastName\": \"Fourteen\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://talkremit-wallet-info.local.fintech23.xyz/api/v1/wallet/create",
											"protocol": "https",
											"host": [
												"talkremit-wallet-info",
												"local",
												"fintech23",
												"xyz"
											],
											"path": [
												"api",
												"v1",
												"wallet",
												"create"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 13 Aug 2025 03:06:21 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15724800; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "{\n    \"responseCode\": \"S100000\",\n    \"responseMessage\": \"Operation successful\",\n    \"data\": null\n}"
								}
							]
						},
						{
							"name": "Create Wallet Using Second Currency and Country Code",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response code is S100000\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.responseCode).to.eql(\"S100000\");",
											"});",
											"",
											"pm.test(\"Response message is Operation successful\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.responseMessage).to.eql(\"Operation successful\");",
											"});",
											"",
											"pm.test(\"Data field is null\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data).to.eql(null);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"userIdentity\": \"{{ValidUserIdentity}}\",\r\n  \"countryCode\": \"{{SecondCountryCode}}\",\r\n  \"currency\": \"{{SecondCurrency}}\",\r\n  \"email\": \"fariha.test.214@example.com\",\r\n  \"mobileNumber\": \"+8801234007214\",\r\n  \"firstName\": \"Fariha\",\r\n  \"middleName\": \"\",\r\n  \"lastName\": \"Fourteen\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/api/v1/wallet/create",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"v1",
										"wallet",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Creating Duplicate Wallet Using Same Mobile Number",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"// Verify response code is WIS400",
											"pm.test(\"Response code is WIS400\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.responseCode).to.eql(\"WIS400\");",
											"});",
											"",
											"// Verify response message is 'Account Already Created'",
											"pm.test(\"Response message is Account Already Created\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.responseMessage).to.eql(\"Account Already Created\");",
											"});",
											"",
											"// Verify data is null",
											"pm.test(\"Data field is null\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data).to.eql(null);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Generate a unique user identity using timestamp",
											"let uniqueUserIdentity = \"UserIdentity_\" + Date.now();",
											"",
											"// Store it as a collection/environment variable",
											"pm.variables.set(\"UniqueUserIdentity\", uniqueUserIdentity);",
											"",
											"// (Optional) Log for debugging",
											"console.log(\"Generated userIdentity:\", uniqueUserIdentity);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"userIdentity\": \"{{UniqueUserIdentity}}\",\r\n  \"countryCode\": \"US\",\r\n  \"currency\": \"{{ValidCurrency}}\",\r\n  \"email\": \"fariha.test.214@example.com\",\r\n  \"mobileNumber\": \"+88012340072193\",\r\n  \"firstName\": \"Fariha\",\r\n  \"middleName\": \"\",\r\n  \"lastName\": \"Fourteen\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/api/v1/wallet/create",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"v1",
										"wallet",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Creating Duplicate Wallet Using Same User Identity",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"// Verify response code is WIS400",
											"pm.test(\"Response code is WIS400\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.responseCode).to.eql(\"WIS400\");",
											"});",
											"",
											"// Verify response message is 'Account Already Created'",
											"pm.test(\"Response message is Account Already Created\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.responseMessage).to.eql(\"Account Already Created\");",
											"});",
											"",
											"// Verify data is null",
											"pm.test(\"Data field is null\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data).to.eql(null);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"userIdentity\": \"{{ValidUserIdentity}}\",\r\n  \"countryCode\": \"US\",\r\n  \"currency\": \"{{DuplicateCurrency}}\",\r\n  \"email\": \"fariha.test.214@example.com\",\r\n  \"mobileNumber\": \"+8801234007214\",\r\n  \"firstName\": \"Fariha\",\r\n  \"middleName\": \"\",\r\n  \"lastName\": \"Fourteen\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/api/v1/wallet/create",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"v1",
										"wallet",
										"create"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get Balance",
					"item": [
						{
							"name": "Get All Account Balance for Valid User Identity",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code is S100000\", function () {",
											"    pm.expect(pm.response.code).to.eql(200); // HTTP code check",
											"    pm.expect(pm.response.json().responseCode).to.eql(\"S100000\");",
											"});",
											"",
											"pm.test(\"Currency codes should not repeat\", function () {",
											"    const jsonData = pm.response.json();",
											"    pm.expect(jsonData.data).to.be.an(\"array\");",
											"",
											"    const currencyCodes = jsonData.data.map(acc => acc.currencyCode);",
											"    const uniqueCodes = [...new Set(currencyCodes)];",
											"",
											"    pm.expect(currencyCodes.length, \"Duplicate currencies found\")",
											"        .to.eql(uniqueCodes.length);",
											"});",
											"",
											"pm.test(\"Each account must have required fields\", function () {",
											"    const jsonData = pm.response.json();",
											"    jsonData.data.forEach(acc => {",
											"        pm.expect(acc).to.have.property(\"accountNo\");",
											"        pm.expect(acc).to.have.property(\"accountTitle\");",
											"        pm.expect(acc).to.have.property(\"accountBalance\");",
											"        pm.expect(acc).to.have.property(\"currencyCode\");",
											"        pm.expect(acc).to.have.property(\"status\");",
											"    });",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"userIdentity\": \"{{ValidUserIdentity}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/api/v1/wallet/account/open/balances",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"v1",
										"wallet",
										"account",
										"open",
										"balances"
									]
								}
							},
							"response": [
								{
									"name": "Get All Account Balance",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"userIdentity\": \"UserIdentity212\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://talkremit-wallet-info.local.fintech23.xyz/api/v1/wallet/account/open/balances",
											"protocol": "https",
											"host": [
												"talkremit-wallet-info",
												"local",
												"fintech23",
												"xyz"
											],
											"path": [
												"api",
												"v1",
												"wallet",
												"account",
												"open",
												"balances"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 13 Aug 2025 04:22:54 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15724800; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "{\n    \"responseCode\": \"S100000\",\n    \"responseMessage\": \"Operation successful\",\n    \"data\": [\n        {\n            \"accountNo\": \"000000025\",\n            \"accountTitle\": \"Talkremit USD account\",\n            \"accountBalance\": 2900,\n            \"currencyCode\": \"USD\",\n            \"openedOnDate\": \"2025-08-12\",\n            \"closedOnDate\": null,\n            \"isUserBaseCurrency\": true,\n            \"status\": \"ACTIVE\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Get All Account Balance for Valid User Identity",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code is S100000\", function () {",
											"    pm.expect(pm.response.code).to.eql(200); // HTTP code check",
											"    pm.expect(pm.response.json().responseCode).to.eql(\"S100000\");",
											"});",
											"",
											"pm.test(\"Currency codes should not repeat\", function () {",
											"    const jsonData = pm.response.json();",
											"    pm.expect(jsonData.data).to.be.an(\"array\");",
											"",
											"    const currencyCodes = jsonData.data.map(acc => acc.currencyCode);",
											"    const uniqueCodes = [...new Set(currencyCodes)];",
											"",
											"    pm.expect(currencyCodes.length, \"Duplicate currencies found\")",
											"        .to.eql(uniqueCodes.length);",
											"});",
											"",
											"pm.test(\"Each account must have required fields\", function () {",
											"    const jsonData = pm.response.json();",
											"    jsonData.data.forEach(acc => {",
											"        pm.expect(acc).to.have.property(\"accountNo\");",
											"        pm.expect(acc).to.have.property(\"accountTitle\");",
											"        pm.expect(acc).to.have.property(\"accountBalance\");",
											"        pm.expect(acc).to.have.property(\"currencyCode\");",
											"        pm.expect(acc).to.have.property(\"status\");",
											"    });",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"userIdentity\": \"{{Valid2ndUserIdentity}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/api/v1/wallet/account/open/balances",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"v1",
										"wallet",
										"account",
										"open",
										"balances"
									]
								}
							},
							"response": [
								{
									"name": "Get All Account Balance",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"userIdentity\": \"UserIdentity212\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://talkremit-wallet-info.local.fintech23.xyz/api/v1/wallet/account/open/balances",
											"protocol": "https",
											"host": [
												"talkremit-wallet-info",
												"local",
												"fintech23",
												"xyz"
											],
											"path": [
												"api",
												"v1",
												"wallet",
												"account",
												"open",
												"balances"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 13 Aug 2025 04:22:54 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15724800; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "{\n    \"responseCode\": \"S100000\",\n    \"responseMessage\": \"Operation successful\",\n    \"data\": [\n        {\n            \"accountNo\": \"000000025\",\n            \"accountTitle\": \"Talkremit USD account\",\n            \"accountBalance\": 2900,\n            \"currencyCode\": \"USD\",\n            \"openedOnDate\": \"2025-08-12\",\n            \"closedOnDate\": null,\n            \"isUserBaseCurrency\": true,\n            \"status\": \"ACTIVE\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Get Balance for InValid User Identity",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response code should be WIS400\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 400]); // ensure API responded without unexpected HTTP code",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.responseCode).to.eql(\"WIS400\");",
											"});",
											"",
											"pm.test(\"Response message should indicate account not found\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.responseMessage).to.eql(\"Account not found\");",
											"});",
											"",
											"pm.test(\"Data field should be null\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data).to.be.null;",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"userIdentity\": \"{{InvalidUserIdentity}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/api/v1/wallet/account/open/balances",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"api",
										"v1",
										"wallet",
										"account",
										"open",
										"balances"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Withdraw",
			"item": [
				{
					"name": "Withdraw",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response code is WIS503\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.responseCode).to.eql(\"WIS503\");",
									"});",
									"",
									"pm.test(\"Response message is Operation Successful.\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.responseMessage).to.eql(\"Operation Successful.\");",
									"});",
									"",
									"pm.test(\"Data field is null\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.data).to.be.null;",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userIdentity\": \"{{ValidUserIdentity}}\",\r\n  \"currency\": \"{{ValidCurrency}}\",\r\n  \"transactionAmount\": {{ValidTransactionAmount}}\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseURL}}/api/v1/wallet/account/withdraw",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"api",
								"v1",
								"wallet",
								"account",
								"withdraw"
							]
						}
					},
					"response": []
				},
				{
					"name": "Withdraw using invalid user identity",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response code is WIS400\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.responseCode).to.eql(\"WIS400\");",
									"});",
									"",
									"pm.test(\"Response message indicates wallet not found\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.responseMessage).to.eql(\"Wallet for this customer not found\");",
									"});",
									"",
									"pm.test(\"Data field is null\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.data).to.be.null;",
									"});",
									"",
									"pm.test(\"HTTP status code is 200\", function () {",
									"    pm.response.to.have.status(200); // Adjust if API returns 400 instead",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userIdentity\": \"{{InvalidUserIdentity}}\",\r\n  \"currency\": \"{{ValidCurrency}}\",\r\n  \"transactionAmount\": {{ValidTransactionAmount}}\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseURL}}/api/v1/wallet/account/withdraw",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"api",
								"v1",
								"wallet",
								"account",
								"withdraw"
							]
						}
					},
					"response": []
				},
				{
					"name": "Withdraw using invalid currency user dont have any wallet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response code is WIS400\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.responseCode).to.eql(\"WIS400\");",
									"});",
									"",
									"pm.test(\"Response message indicates account not found\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.responseMessage).to.eql(\"Account not found\");",
									"});",
									"",
									"pm.test(\"Data field is null\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.data).to.be.null;",
									"});",
									"",
									"pm.test(\"HTTP status code is 200\", function () {",
									"    pm.response.to.have.status(200); // Adjust if API returns 400 instead",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userIdentity\": \"{{ValidUserIdentity}}\",\r\n  \"currency\": \"{{InvalidCurrency}}\",\r\n  \"transactionAmount\": {{ValidTransactionAmount}}\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseURL}}/api/v1/wallet/account/withdraw",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"api",
								"v1",
								"wallet",
								"account",
								"withdraw"
							]
						}
					},
					"response": []
				},
				{
					"name": "Withdraw using invalid Amount",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"HTTP status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userIdentity\": \"{{ValidUserIdentity}}\",\r\n  \"currency\": \"{{ValidCurrency}}\",\r\n  \"transactionAmount\": {{InvalidTransactionAmount}}\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseURL}}/api/v1/wallet/account/withdraw",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"api",
								"v1",
								"wallet",
								"account",
								"withdraw"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Top up",
			"item": [
				{
					"name": "Top up",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userIdentity\": \"{{ValidUserIdentity}}\",\r\n  \"currency\": \"{{ValidCurrency}}\",\r\n  \"transactionAmount\": {{ValidTransactionAmount}}\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseURL}}/api/v1/wallet/account/top-up",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"api",
								"v1",
								"wallet",
								"account",
								"top-up"
							]
						}
					},
					"response": [
						{
							"name": "Top up",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"userIdentity\": \"UserIdentity212\",\r\n  \"currency\": \"USD\",\r\n  \"transactionAmount\": 100.0\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://talkremit-wallet-info.local.fintech23.xyz/api/v1/wallet/account/top-up",
									"protocol": "https",
									"host": [
										"talkremit-wallet-info",
										"local",
										"fintech23",
										"xyz"
									],
									"path": [
										"api",
										"v1",
										"wallet",
										"account",
										"top-up"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 13 Aug 2025 04:22:40 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15724800; includeSubDomains"
								}
							],
							"cookie": [],
							"body": "{\n    \"responseCode\": \"WIS503\",\n    \"responseMessage\": \"Operation Successful.\",\n    \"data\": null\n}"
						}
					]
				},
				{
					"name": "Top up With Invalid Currency User does not have wallet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validate response code\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 400]); // Adjust if API strictly uses 400",
									"    const res = pm.response.json();",
									"    pm.expect(res.responseCode).to.eql(\"WIS400\");",
									"});",
									"",
									"pm.test(\"Validate response message\", function () {",
									"    const res = pm.response.json();",
									"    pm.expect(res.responseMessage).to.eql(\"Account not found\");",
									"});",
									"",
									"pm.test(\"Validate data field is null\", function () {",
									"    const res = pm.response.json();",
									"    pm.expect(res.data).to.be.null;",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userIdentity\": \"{{ValidUserIdentity}}\",\r\n  \"currency\": \"{{SecondCurrency}}\",\r\n  \"transactionAmount\": {{ValidTransactionAmount}}\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseURL}}/api/v1/wallet/account/top-up",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"api",
								"v1",
								"wallet",
								"account",
								"top-up"
							]
						}
					},
					"response": [
						{
							"name": "Top up",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"userIdentity\": \"UserIdentity212\",\r\n  \"currency\": \"USD\",\r\n  \"transactionAmount\": 100.0\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://talkremit-wallet-info.local.fintech23.xyz/api/v1/wallet/account/top-up",
									"protocol": "https",
									"host": [
										"talkremit-wallet-info",
										"local",
										"fintech23",
										"xyz"
									],
									"path": [
										"api",
										"v1",
										"wallet",
										"account",
										"top-up"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 13 Aug 2025 04:22:40 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15724800; includeSubDomains"
								}
							],
							"cookie": [],
							"body": "{\n    \"responseCode\": \"WIS503\",\n    \"responseMessage\": \"Operation Successful.\",\n    \"data\": null\n}"
						}
					]
				},
				{
					"name": "Top up With Invalid User Identity",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response code is WIS400\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 400]); // Adjust based on API HTTP spec",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.responseCode).to.eql(\"WIS400\");",
									"});",
									"",
									"pm.test(\"Response message indicates wallet not found\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.responseMessage).to.eql(\"Wallet for this customer not found\");",
									"});",
									"",
									"pm.test(\"Data field is null\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.data).to.be.null;",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userIdentity\": \"{{InvalidUserIdentity}}\",\r\n  \"currency\": \"{{SecondCurrency}}\",\r\n  \"transactionAmount\": {{ValidTransactionAmount}}\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseURL}}/api/v1/wallet/account/top-up",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"api",
								"v1",
								"wallet",
								"account",
								"top-up"
							]
						}
					},
					"response": [
						{
							"name": "Top up",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"userIdentity\": \"UserIdentity212\",\r\n  \"currency\": \"USD\",\r\n  \"transactionAmount\": 100.0\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://talkremit-wallet-info.local.fintech23.xyz/api/v1/wallet/account/top-up",
									"protocol": "https",
									"host": [
										"talkremit-wallet-info",
										"local",
										"fintech23",
										"xyz"
									],
									"path": [
										"api",
										"v1",
										"wallet",
										"account",
										"top-up"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 13 Aug 2025 04:22:40 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15724800; includeSubDomains"
								}
							],
							"cookie": [],
							"body": "{\n    \"responseCode\": \"WIS503\",\n    \"responseMessage\": \"Operation Successful.\",\n    \"data\": null\n}"
						}
					]
				},
				{
					"name": "Top up With Invalid Amount",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"HTTP status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userIdentity\": \"{{ValidUserIdentity}}\",\r\n  \"currency\": \"{{ValidCurrency}}\",\r\n  \"transactionAmount\": {{InvalidTransactionAmount}}\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseURL}}/api/v1/wallet/account/top-up",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"api",
								"v1",
								"wallet",
								"account",
								"top-up"
							]
						}
					},
					"response": [
						{
							"name": "Top up",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"userIdentity\": \"UserIdentity212\",\r\n  \"currency\": \"USD\",\r\n  \"transactionAmount\": 100.0\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://talkremit-wallet-info.local.fintech23.xyz/api/v1/wallet/account/top-up",
									"protocol": "https",
									"host": [
										"talkremit-wallet-info",
										"local",
										"fintech23",
										"xyz"
									],
									"path": [
										"api",
										"v1",
										"wallet",
										"account",
										"top-up"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 13 Aug 2025 04:22:40 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15724800; includeSubDomains"
								}
							],
							"cookie": [],
							"body": "{\n    \"responseCode\": \"WIS503\",\n    \"responseMessage\": \"Operation Successful.\",\n    \"data\": null\n}"
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": "https://devapi.currencycloud.com",
			"type": "default"
		}
	]
}